### factory.map
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

name: 0_std_factory_whales
subname: 0_std_factory_whales
type: factory
neighbors: 0

tile: o = grass / dirt
tile: * = pavement
tile: # = stone wall
tile: " = w:3 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: . = floor
tile: , = floor_lock
tile: % = counter
tile: T = toilet
tile: K = sink
tile: + = w:5 locked door / w:1 closed door
tile: ' = w:5 closed door / w:1 open door
tile_group: ! = w:4 chain-link fence / w:1 pavement

subst: X = w:3 X / w:2 x
tile: X = glass wall
tile: x = w:6 stone wall / w:1 window

shuffle: abc
tile: a = w:5 closed door / w:1 locked door / w:1 open door
tile: bc = stone wall

shuffle: defg
tile: d = w:5 locked door / w:1 closed door
tile: efgh = w:6 stone wall / w:1 window

shuffle: ijk
shuffle: lmn
tile: il = w:10 closed door / w:1 open door
tile: jkmn = stone wall

tile: CD = floor
furniture: C = wood chair
furniture: D = desk
item_group: 70 D = items_office

tile: U = dumpster
item_group: 80 U = items_trash

tile: tL = shelves
item_group: 75 t = items_factory_tools
item_group: 75 L = items_cleaning

map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
oo###"""###+++###"""###oo
oo#.......'....%%%%%%.#oo
oo#ijk#lmn#....C.C.C..#oo
oo"...#...#..........."oo
oo"ttt#LLL#....%%%%%%."oo
oo"########....C.C.C.."oo
oo#...................#oo
oo#.%%%%%%.....%%%%%%.#oo
oo".C.C.C......C.C.C.."oo
oo"..................."oo
oo#.%%%%%%.....%%%%%%.#oo
oo#.C.C.C......C.C.C..#oo
oo"...................#oo
oo"...........,#XXXXXX#oo
oo#+##+##.....,a......#oo
oo#..#..#.....,b..DDD.0oo
oo#TK#TK#.....,c...C..#oo
oo#######defgh####0#0##oo
oo!***********UUU*****!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!!!!!!!!!!!!!!!!!!!!!oo
endmap
done

name: 0_std_factory_whales_roof
subname: 0_std_factory_whales
type: factory
level: 1
neighbors: 0

tile: o = empty
tile: . = roof

map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

# Since all "puzzle pieces" of a given neighbors: value are the same shape, we
# can group them all into the same subname and only have one roof!  Yay!

# The workfloor; various "puzzle pieces."

name: n1_floor_factory_whales_1
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: T = toilet
tile: K = sink
tile: % = counter

tile: CD = floor
furniture: C = wood chair
furniture: D = desk
item_group: 70 D = items_office

tile_group: ! = w:4 chain-link fence / w:1 pavement

subst: X = w:3 X / w:1 x
tile: X = glass wall
tile: x = w:6 stone wall / w:1 window

shuffle: abc
tile: a = w:5 locked door / w:3 closed door / w:1 open door
tile: bc = stone wall

shuffle: defghi
tile: d = w:5 closed door / w:1 open door
tile: efghi = stone wall

shuffle: jkl
tile: j = w:5 locked door / w:1 closed door
tile: kl = w:9 stone wall / w:1 window

tile: tL = shelves
item_group: 75 t = items_factory_tools
item_group: 75 L = items_cleaning

tile: U = dumpster
item_group: 80 U = items_trash

map:
oo#...................#oo
oo#..................."oo
oo########......%%%%%."oo
oo#t.LLL.i......C.C.C."oo
oo#t.....h............#oo
oo#t.....g......%%%%%.#oo
oo####def#......C.C.C."oo
oo#T.#................"oo
oo#K.+..........%%%%%."oo
oo####..%%%%%...C.C.C.#oo
oo#T.#..C.C.C.........#oo
oo#K.+..........%%%%%."oo
oo####..%%%%%...C.C.C."oo
oo#T.#..C.C.C........."oo
oo#K.+........,#XXXXXX#oo
oo####..%%%%%.,a......#oo
oo#T.#..C.C.C.,b..DDD.0oo
oo#K.+........,c...C..#oo
oo#####j""k""l###0##0##oo
oo!*************UUU***!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!!!!!!!!!!!!!!!!!!!!!oo
endmap
done

name: n1_machinery_factory_whales_1
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: % = counter
tile: { = machinery
tile_group: ! = w:4 chain-link fence / w:1 pavement

subst: X = w:2 * / w:1 A
subst: Y = w:2 * / w:1 A

tile_group: A = w:2 stone wall / w:1 floor

tile: D = dumpster
item_group: 80 D = items_trash

shuffle: abc
tile: a = w:5 locked door / w:1 closed door
tile: bc = stone wall

shuffle: def
tile: d = w:5 closed door / w:1 open door
tile: ef = stone wall

subst: 1234 = w:2 & / w:1 .
tile: & = floor
furniture: & = crate

tile: C = floor
furniture: C = wood chair

tile: TL = shelves
item_group: 70 T = items_factory_tools
item_group: 70 L = items_cleaning

map:
oo#...................#oo
oo#...................#oo
oo"..{..C.......C..{.."oo
oo"..{{{%%.....%%{{{.."oo
oo#..{..C.......C..{..#oo
oo#...................#oo
oo"..{..C.......C..{.."oo
oo"..{{{%%.....%%{{{.."oo
oo#..{..C.......C..{..#oo
oo#...................#oo
oo"..{..C.......C..{.."oo
oo"..{{{%%.....%%{{{.."oo
oo#..{..C.......C..{..#oo
oo#...................#oo
oo#..11444......#######oo
oo#..12234......f.TTTT#oo
oo"..12233......e....."oo
oo#.............d.LLLL#oo
oo##"#AAA#"a"b"c#######oo
oo!*************DDD***!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!!!!XXX!!!!!!!YYY!!!!oo
endmap
done

name: n1_dense_machinery_factory_whales_1
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: T = toilet
tile: K = sink
tile: % = conveyor belt
tile: & = counter
tile: { = machinery
tile_group: ! = w:4 chain-link fence / w:1 pavement

tile: D = dumpster
item_group: 86 D = items_trash

shuffle: abc
tile: a = w:5 locked door / w:1 closed door
tile: bc = stone wall

tile: C = floor
furniture: C = wood chair

map:
oo#...................#oo
oo#...................#oo
oo"..................."oo
oo"..{{{..........C..."oo
oo#..{{{.........&&&..#oo
oo#..{{{{{{%%%%%{{{{..#oo
oo"..&&&.........{{{.."oo
oo"...C..........{{{.."oo
oo#.......{{{....{%{..#oo
oo#..%%%%{{{{.....%...#oo
oo"..%....{{{.....%..."oo
oo"..%.....{.....{%{.."oo
oo#..{.....{{{{{{{{{..#oo
oo#..{...........{{{..#oo
oo#.{{{&...&{{{...{...#oo
oo".{{{&C.C&{{%%%%%..."oo
oo".{{{&...&{{{......."oo
oo#...................#oo
oo#""####""abc""####""#oo
oo!***DDD*******DDD***!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!!!!!!!!!!!!!!!!!!!!!oo
endmap
done

name: n1_offices_1_factory_whales
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: * = pavement
tile_group: ^ = w:9 yellow pavement / w:1 pavement
tile_group: ! = w:1 chain-link fence / w:1 pavement
tile: " = window
tile: # = stone wall
tile: + = w:10 closed door / w:1 open door
tile: T = toilet
tile: K = sink

tile: CD = floor
furniture: C = wood chair
furniture: D = desk
item_group: 80 D = items_office

tile: L$ = shelves
item_group: 70 L = items_cleaning
item_group: 30 $ = items_office

tile: F = fridge
item_group: 50 F = items_fridge

tile: % = counter
item_group: 20 % = items_kitchen_counter

shuffle: ab
shuffle: cd
shuffle: efgh
shuffle: ijklm
shuffle: npq
tile: acein =  w:10 closed door / w:1 open door
tile: bdfghjklmpq = stone wall

shuffle: rst
tile: r = w:5 locked door / w:1 closed door
tile: st = stone wall

map:
oo#######+######+######oo
oo#....a..e....g..#..T#oo
oo"....b..f....h..+..K#oo
oo#DDD.#..#....#..#####oo
oo#.C..#..#LLLL#..#..T#oo
oo######..######..+..K#oo
oo#....c..........#####oo
oo"DDD.d..........+...#oo
oo#.C..#..#i#j#k#l#..."oo
oo######..m.......#$..#oo
oo#....#..#.......#$.."oo
oo"CD..+..#F%%%K%%#$$$#oo
oo#.D..#..#############oo
oo######..#$$$........#oo
oo#....#..#........D.."oo
oo#.D..+..#n#p##...DC.#oo
oo"CD..#.......q...D.."oo
oo#.D..#.......#......#oo
oo##"###"r#s#t"###""###oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!*******************!oo
oo!*******************!oo
endmap
done

name: n1_shipping_factory_whales
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: * = pavement
tile: ! = w:5 chain-link fence / w:1 pavement
tile: # = stone wall
tile: " = w:2 window / w:1 stone wall

subst: 1234567890 = w:8 C / w:4 c / w:1 .
tile: cC = floor
furniture: c = crate
furniture: C = tall crate

shuffle: XYZ
tile: X = floor
tile: YZ = w:8 stone wall / w:1 floor

map:
oo#...................#oo
oo#...................#oo
oo#..1115......88666..#oo
oo"..11155......8667.."oo
oo#..1124.......9867..#oo
oo#..1224.......9867..#oo
oo#..22343.....99887..#oo
oo"..22343.....00887.."oo
oo#..23333.....00877..#oo
oo#..33432.....07877..#oo
oo#..33432......7887..#oo
oo"..34422.....77887.."oo
oo#..33312.....76899..#oo
oo#..44412......6899..#oo
oo#..44412......6009..#oo
oo"..5551.......6009.."oo
oo#..1511.......6000..#oo
oo#...................#oo
oo#""XXX"""YYY"""ZZZ""#oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!*******************!oo
oo!!!!!!!*******!!!!!!!oo
endmap
done

name: n1_electrical_factory_whales
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
subst: * = w:7 * / w:1 o
tile: * = pavement
tile: # = stone wall
tile: " = w:3 window / w:1 stone wall
tile_group: X = w:2 glass wall / w:1 stone wall
tile: { = machinery
tile: $ = server rack
tile_group: ! = w:9 chain-link fence / w:1 pavement

tile: % = counter
item_group: 80 % = items_computer_room

shuffle: abc
tile: a? = w:5 locked door / w:3 stone wall / w:1 closed door
tile: bc = stone wall

shuffle: def
shuffle: ghi
tile: dg = w:4 closed door / w:1 open door
tile: efhi = stone wall

map:
oo###d######e######f###oo
oo#...................#oo
oo#...................#oo
oo".....$$.....$$....."oo
oo#.....$$.....$$.....#oo
oo#.....$$.....$$.....#oo
oo#.....$$.....$$.....#oo
oo".....$$.....$$....."oo
oo#.....$$.....$$.....#oo
oo#{....$$.....$$.....#oo
oo#{....###ghi###XXXXX#oo
oo#{...%#.............#oo
oo#%...%#{............#oo
oo#%...%#{{.$$$$$$$$$.#oo
oo#%...%#{{...........#oo
oo#....%#{{.$$$$$$$$$.#oo
oo#....%#{....$$$.....#oo
oo#..{{%#.............#oo
oo#"?##"#########a#b#c#oo
oo!**{{********{******!oo
oo!***********{{{*****!oo
oo!***********{{{*****!oo
oo!***********{{{*****!oo
oo!*******************!oo
oo!!!!!!!!!!!!!!!!!!!!!oo
endmap
done

name: n1_cafeteria_factory_whales
subname: factory_1
type: cafeteria
neighbors: 1

tile: o = grass / dirt
tile: * = w:20 grass / w:5 dirt / w:2 small tree
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: ! = w:3 tree / w:2 small tree / w:1 grass
tile: S = stove
tile: % = counter
tile: + = w:6 locked door / w:1 closed door
tile: " = w:8 window / w:1 stone wall
tile: & = affixed table
tile: ~ = affixed bench
tile: t = toilet
tile: k = sink

tile: F = fridge
item_group: 80 F = items_fast_food

tile: $ = shelves
item_group: 80 $ = items_food_shelves

tile: ^ = counter
item_group: 70 ^ = items_kitchen_counter

tile: D = dumpster
item_group: 85 D = items_trash

tile: TCc = dirt
furniture: T = table
furniture: cC = wood chair

shuffle: 123
shuffle: 456
shuffle: 7890
tile: 1 = w:5 closed glass door / w:1 open glass door / w:3 closed door / w:1 open door
tile: 47 = w:5 closed door / w:1 open door
tile: 2356890 = stone wall


map:
oo#####123#############oo
oo#t..+...#$$$$$^^^SFF#oo
oo"k..#..,#..........."oo
oo"####..,+..^^^kkkk.."oo
oo#t..+..,##4#######56#oo
oo#k..#...#...........#oo
oo#####...#%%%%%%%%%%%#oo
oo"~~~................#oo
oo"&&&.............~~~"oo
oo"~~~...~~~..~~~..&&&"oo
oo#......&&&..&&&..~~~"oo
oo"~~~...~~~..~~~.....#oo
oo"&&&.............~~~"oo
oo"~~~...~~~..~~~..&&&"oo
oo#......&&&..&&&..~~~"oo
oo"~~~...~~~..~~~.....#oo
oo"&&&.............~~~"oo
oo"~~~.............&&&"oo
oo##"#7#"#8#"#9#"#0#"##oo
ooDDD******************oo
oo*****cCc**CcC**cCc**!oo
oo*****TTT**TTT**TTT***oo
oo**!**CcC**cCc**CcC*!*oo
oo*********************oo
oo!***!***!*****!***!**oo
endmap
done

name: n1_security_factory_whales
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: , = floor_lock
tile: * = pavement
tile_group: ^ = w:5 yellow pavement / w:1 pavement
tile: # = stone wall
tile: ! = w:4 chain-link fence / w:1 pavement
tile: ' = w:14 locked door / w:1 closed door
tile: + = w:14 closed door / w:1 open door
tile: " = w:9 window / w:1 stone wall
tile: % = counter

tile: TcC = floor
furniture: T = table
furniture: cC = wood chair

tile: E = shelves
item_group: 80 E = items_security_equipment

tile: W = shelves
item_group: 70 W = items_security_weapons

shuffle: 123
tile: 1 = w:9 locked door / w:1 closed door
tile: 23 = stone wall

map:
oo#E....#.......#....E#oo
oo#E...."......."....E#oo
oo#E....#..,,,..#....E#oo
oo###+######'######+###oo
oo#........,,,........#oo
oo#.......%%%%%.......#oo
oo#.......%.C.%.......#oo
oo#...................#oo
oo####+############+###oo
oo#.......#EEEEEEE#,..#oo
oo#.CcCcC.#.......',..#oo
oo#.TTTTT.#########,..#oo
oo#.cCcCc.#WWWWWWW#,..#oo
oo#.......#.......',..#oo
oo#################,..#oo
oo#...#...#...#...#...#oo
oo#'###'###'###'###...#oo
oo#,,.,,,.,,,,,,,...,,#oo
oo#1########2########3#oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!*******************!oo
oo!*******************!oo
endmap
done

name: n1_parking_factory_whales
subname: factory_1
type: factory
neighbors: 1

tile: o = grass / dirt
tile: # = stone wall
tile: " = w:1 window / w:3 stone wall
tile: . = floor
tile: , = floor_lock
tile: * = pavement
tile: ^ = yellow pavement
tile: { = ticket dispenser
tile: + = w:4 locked door / w:1 closed door
tile: ' = w:6 closed glass door / w:2 open glass door / w:3 closed door / w:1 open door
tile_group: ! = chain-link fence / pavement

shuffle: abc
shuffle: def
tile: ad = w:6 closed glass door / w:2 open glass door / w:3 closed door / w:1 open door
tile: bcef = stone wall

tile: SD = snack machine
item_group: 85 S = items_snacks
item_group: 85 D = items_fridge_snacks

map:
oo#+########+########+#oo
oo",,......,,,......,,"oo
oo"..................."oo
oo#################def#oo
oo".............{{#..."oo
oo"...SSS.DDD.....'..."oo
oo#################abc#oo
oo#***^***^***^***^***#oo
oo"***^***^***^***^***"oo
oo#***^***^***^***^***#oo
oo#***^***^***^***^***#oo
oo#*******************#oo
oo"*******************"oo
oo#*******************#oo
oo#***^***^***^***^***#oo
oo#***^***^***^***^***#oo
oo"***^***^***^***^***"oo
oo#***^***^***^***^***#oo
oo#################***#oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!***^***^***^***^***!oo
oo!*******************!oo
oo!*******************!oo
endmap
done

name: n1_roof_factory_whales
subname: factory_1
type: factory
neighbors: 1
level: 1

tile: o = empty
tile: . = roof

map:
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
