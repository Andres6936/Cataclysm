### mall_3.map
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

map:
###########.............#
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
#.........#..............
###########.............#
endmap
done


name: n3_corridor_mall_whales
subname: mall_3
type: mall
neighbors: 3
weight: 50

tile: # = stone wall
tile: . = floor
tile: % = short stone wall
tile: F = fountain
tile: ~ = shallow water
tile_group: X = w:3 glass wall / w:1 stone wall
tile: T = w:2 small tree / w:1 dirt

tile: SD = snack machine
item_group: 70 S = items_snacks
item_group: 70 D = items_fridge_snacks

tile: Bt = floor
furniture: B = bench
furniture: t = trash can
item_group: 75 t = items_trash

map:
#.......................#
#........................
#D........%%%............
#S........%T%............
#.........%%%............
#B.......................
#B.......................
#B........%%%............
X.........%~%%%..........
X.......t%%~~~%%%........
X........%~~~~~~%%.......
X.......B%~~~~~~~%.......
X.......B%~~F~~~~%.......
X.......B%~~~~~~~%.......
X........%~~~~~~%%.......
X.......t%%~~~%%%........
X.........%~%%%..........
#B........%%%............
#B.......................
#B.......................
#.........%%%............
#S........%T%............
#D........%%%............
#........................
#.......................#
endmap
done

name: n3_clothing_mall_whales
subname: mall_3
type: mall
neighbors: 3
weight: 300

tile: # = stone wall
tile: % = counter
tile: . = floor
tile: X = glass wall
tile: + = closed glass door
tile_group: ' = w:4 glass wall / w:1 closed glass door
tile: - = short stone wall
tile: * = dirt
tile: T = w:2 small tree / w:1 dirt

tile: M = floor
num_items: M = c: 1d2 - 1; mannequin


shuffle: 1234567
tile: 1234567 = display rack
item_group: 70 1 = items_hats
item_group: 70 2 = items_shirts
item_group: 70 3 = items_jackets
item_group: 70 4 = items_gloves
item_group: 70 5 = items_pants
item_group: 70 6 = items_shoes
item_group: 70 7 = items_misc_clothing

map:
###########.............#
#111111111##.............
#..........##............
#.1111111...##....---....
#...........MX....-T-....
#.22.22.22...X....-*-....
#.22.22.22..MX....-T-....
#............X....-*-....
#..333333...MX....-T-....
#.........#XX#....---....
#.%%.3333.X..............
#..%......'..............
#..%......+..............
#..%......'..............
#%%%.4444.X..............
#.........#XX#....---....
#..444444...MX....-T-....
#............X....-*-....
#5.5.77.77..MX....-T-....
#5.5.77.77...X....-*-....
#5.5........MX....-T-....
#5.5.66666..##....---....
#5.........##............
#5.6666666##.............
###########.............#
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
