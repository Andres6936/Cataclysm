### Whales Grocery Stores
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

name: std_grocery_store_whales
subname: std_gs_whales
type: grocery store
tile: o = grass / dirt
tile: * = concrete floor
tile: . = floor
tile: % = counter
tile: # = stone wall
tile: X = glass wall
tile: W = wood wall
tile: + = closed glass door
tile: @ = w:15 locked door / w:5 closed door / w:1 stone wall

tile: {SsLKDCFcM = display rack
item_group: 15 S = items_snacks
item_group: 20 s = items_snacks
item_group: 20 L = items_cleaning
item_group: 15 K = items_kitchen_counter
item_group: 20 D = items_dry_drinks
item_group: 15 C = items_canned_food
item_group: 15 F = items_dry_food
item_group: 25 c = items_behind_counter
item_group: 20 M = items_misc_goods
shuffle: CFDS
shuffle: KLM

tile: f = display fridge
item_group: 15 f = items_fridge_snacks

map:
*************************
*************************
*************************
*************************
**#XXXXXXXX###XXXXXXXX#**
**+...................+**
**+...................+**
**#M...%.s%.s%.s%.s...#**
**#M...%.s%.s%.s%.s...#**
###M...%.s%.s%.s%.s...###
#......%.s%.s%.s%.s.....#
#.......................#
#.{{{{.SL..DC..CF...%%%.#
#......SL..DC..CF...%...#
#.{{{{.SL..DC..CF...%..c#
#.WWWW.SL..DC..CF...%..c#
#.{{{{.SL..DC..CF...%..c#
#......SK..DC..CF...%%%%#
#.{{{{.SK..DC..CF......f#
#.WWWW.SK..DC..CF..MM..f#
#.{{{{.SK..DC..CF..MM..f#
#......................f#
#ffffff.................#
######################@##
ooooooooooooooooooooooooo
endmap
done

name: std_grocery_store_whales_roof
subname: std_gs_whales
floor: 1
type: grocery store
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
oo.....................oo
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
ooooooooooooooooooooooooo
endmap
done

name: bodega_grocery_store_whales
subname: bodega_gs_whales
type: grocery store
tile: o = w:10 grass / w:10 dirt / w:1 underbrush
tile: , = concrete floor
tile: * = pavement
tile: . = floor
tile: % = counter
tile: # = stone wall
tile: X = glass wall
tile: " = w:5 window / w:1 stone wall
tile: + = w:9 closed glass door / w:1 closed door
tile: ' = closed door
tile: @ = w:5 locked door / w:1 closed door
tile: B = bed
tile: { = shelves
tile: T = toilet
tile: k = sink
tile_group: ! = w:4 chain-link fence / w:1 pavement
tile_group: ? = w:1 chain-link fence / w:1 pavement

tile: r = dresser
item_group: 40 r = items_all_clothes

tile: csKLCSDd = display rack
item_group: 20 c = items_behind_counter
item_group: 15 s = items_snacks
item_group: 20 K = items_kitchen_counter
item_group: 20 L = items_cleaning
item_group: 15 C = items_canned_food
item_group: 18 S = items_snacks
item_group: 15 D = items_dry_food
item_group: 20 d = items_dry_drinks
shuffle: CSD
shuffle: sKLd

tile: f = display fridge
item_group: 15 f = items_fridge_snacks

tile: 1 = dumpster
tile: 23 = pavement
item_group: 40 1 = items_trash
shuffle: 123

map:
,,,,,,,,,,,,,,,,********?
,,,,,,,,,,,,,,,,********?
,,,,,,,,,,,,,,,,********?
ooo##X#+#XXXXXX#********?
ooo#c.%........#********?
ooo#c.%.KC.SD.f#********?
ooo#c.%.KC.SD.f#********?
ooo#c.%.KC.SD.f#********?
ooo#c.%.KC.SD.f#********?
ooo#..%.LC.SD.f#********?
ooo#..s.LC.Sd.f#********?
ooo#..s.LC.Sd.f#********?
ooo#..s.LC.Sd.f#********?
ooo#...........#********?
ooo###########'#********?
ooo#BB..r#T..'.#********?
ooo".....#k..#.#2*******?
ooo#.....#####.#2*******?
ooo#{{{..'.....#2*******?
ooo####"######@#********?
oooooooo!1333***********?
oooooooo!1**************?
oooooooo!1**************?
oooooooo!***************?
oooooooo!!!!!!!!!!!!!!!!!
endmap
done

name: bodega_grocery_store_whales_roof
subname: bodega_gs_whales
floor: 1
type: grocery store
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooo.............ooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

name: adj_grocery_store_whales
type: grocery store
adjacent
adj_on: road
tile: a = pavement
map:
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
