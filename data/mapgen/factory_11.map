### factory.map
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

# Since all "puzzle pieces" of a given neighbors: value are the same shape, we
# can group them all into the same subname and only have one roof!  Yay!

name: n11_floor_factory_whales_1
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: T = toilet
tile: K = sink
tile: % = counter

tile: CD = floor
furniture: C = wood chair
furniture: D = desk
item_group: 70 D = items_office

tile_group: ! = w:4 chain-link fence / w:1 pavement

subst: X = w:3 X / w:1 x
tile: X = glass wall
tile: x = w:6 stone wall / w:1 window

shuffle: abc
tile: a = w:5 locked door / w:3 closed door / w:1 open door
tile: bc = stone wall

shuffle: defghi
tile: d = w:5 closed door / w:1 open door
tile: efghi = stone wall

shuffle: jkl
tile: j = w:5 locked door / w:1 closed door
tile: kl = w:9 stone wall / w:1 window

tile: tL = shelves
item_group: 82 t = items_factory_tools
item_group: 75 L = items_cleaning

map:
oo#...................#oo
oo#..................."oo
oo########......%%%%%."oo
oo#t.LLL.i......C.C.C."oo
oo#t.....h............#oo
oo#t.....g......%%%%%.#oo
oo####def#......C.C.C."oo
oo#T.#................"oo
oo#K.+..........%%%%%."oo
oo####..%%%%%...C.C.C.#oo
oo#T.#..C.C.C.........#oo
oo#K.+..........%%%%%."oo
oo####..%%%%%...C.C.C."oo
oo#T.#..C.C.C........."oo
oo#K.+..........%%%%%.#oo
oo####..%%%%%...C.C.C.#oo
oo#T.#..C.C.C.........#oo
oo#K.+..........#XXXXX#oo
oo####..%%%%%..,X.....#oo
oo#t....C.C.C..,j.DDD.0oo
oo#t...........,k..C..0oo
oo#t....%%%%%..,l.....#oo
oo#t....C.C.C..,#######oo
oo#t..................#oo
oo#...................#oo
endmap
done

name: n11_machinery_factory_whales_1
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: % = counter
tile: ^ = conveyor belt
tile: { = machinery
tile_group: ! = w:4 chain-link fence / w:1 pavement

subst: X = w:2 * / w:1 A
subst: Y = w:2 * / w:1 A

tile_group: A = w:2 stone wall / w:1 floor

tile: D = dumpster
item_group: 80 D = items_trash

shuffle: abc
tile: a = w:5 locked door / w:1 closed door
tile: bc = stone wall

shuffle: def
tile: d = w:5 closed door / w:1 open door
tile: ef = stone wall

subst: 1234 = w:2 & / w:1 .
tile: & = floor
furniture: & = crate

tile: C = floor
furniture: C = wood chair

tile: TL = shelves
item_group: 70 T = items_factory_tools
item_group: 70 L = items_cleaning

map:
oo#...................#oo
oo#...................#oo
oo"..{..C.......C.{{{."oo
oo"..{{{%%^....%%^^^{."oo
oo#..{..C.^.....C.{{{.#oo
oo#.......^...........#oo
oo"..{..C.^.....C.{{{."oo
oo"..{{{%%^....%%^^^{."oo
oo#..{..C.^.....C.{{{.#oo
oo#.......^...........#oo
oo"..{..C.^.....C.{{{."oo
oo"..{{{%%^....%%^^^{."oo
oo#..{..C.^.....C.{{{.#oo
oo#.......^...........#oo
oo#..{..C.^.....#######oo
oo#..{{{%%^.....f.TTTT#oo
oo"..{..C.^.....e....."oo
oo#.......^.....d.LLLL#oo
oo#...C...^.....#######oo
oo#..{%%..^......11111#oo
oo#.{{{{..{......33122#oo
oo".{{{{{{{......33322"oo
oo#.{{{{.........44442#oo
oo#..{................#oo
oo#...................#oo
endmap
done

name: n11_dense_machinery_factory_whales_1
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:4 window / w:1 stone wall
tile: 0 = w:10 window / w:1 stone wall
tile: + = w:5 closed door / w:1 open door
tile: % = conveyor belt
tile: & = counter
tile: { = machinery
tile_group: ! = w:4 chain-link fence / w:1 pavement

shuffle: abc
tile: a = w:5 locked door / w:1 closed door
tile: bc = stone wall

tile: C = floor
furniture: C = wood chair

tile_group: XY = w:2 stone wall / w:1 glass wall

tile: T = shelves
item_group: 75 T = items_factory_tools

map:
oo#...................#oo
oo#..#XXXXXXXX+XXXXXXX#oo
oo#..#{{&.............#oo
oo"..#{{&C............"oo
oo"..#{{&.........C..."oo
oo#..Y...........&&&..#oo
oo#..Y.......%%%{{{{..#oo
oo"..+.......%...{{{.."oo
oo"..Y....{{{%{{......"oo
oo#..Y....{{{{{{......#oo
oo#..Y.%%%%{{{{{.....T#oo
oo"..Y.%..{{{{{{.....T#oo
oo"..Y.%..{{{%{{.....T#oo
oo#..Y.%.....%%%%....T#oo
oo#..Y.%........%....T#oo
oo#..Y.%...&{{{.%.....#oo
oo"..Y.%..C&{{%%%....."oo
oo"..Y.%...&{{{......."oo
oo#..Y.%............C.#oo
oo#..Y.%...........&&&#oo
oo#..Y.%.{{{{{{{..{{{{#oo
oo#..Y.%%%%%%%%%%%%%{{#oo
oo#..Y...{{{{{{{..{{{{#oo
oo#..##################oo
oo#...................#oo
endmap
done

name: n11_offices_1_factory_whales
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: " = window
tile: # = stone wall
tile: + = w:10 closed door / w:1 open door
tile: t = toilet
tile: k = sink
tile: { = cubicle wall

tile: L$ = shelves
item_group: 70 L = items_cleaning
item_group: 30 $ = items_office

tile: F = fridge
item_group: 50 F = items_fridge

tile: %^ = counter
item_group: 20 % = items_kitchen_counter

shuffle: 123
shuffle: 456
shuffle: 789
shuffle: def
shuffle: ghi
shuffle: jlm
shuffle: npq
shuffle: rsu
tile: 147dgjnr = w:9 closed door / w:1 open door
tile: 235689efhilmpqsu = stone wall

tile: DTCc = floor
furniture: D = desk
item_group: 85 D = items_office
furniture: T = table
furniture: cC = wood chair

map:
oo#######789###########oo
oo#.D...g...##ttt#ttt##oo
oo"cD...h...#k...#...k#oo
oo#.D...i...#k...#...k#oo
oo#######...##123#456##oo
oo#.D...j............."oo
oo"cD...l...###########oo
oo#.D...m...#........$#oo
oo#######...d..cCcCc.$#oo
oo#.D...n...e..TTTTT.^"oo
oo"cD...p...f..CcCcC.^"oo
oo#.D...q...#........^#oo
oo#######...###########oo
oo#%%F%%#....{DD{DD{DD#oo
oo"c....7....{.c{.c{.c"oo
oo#Tc...8....{.{{.{{.{#oo
oo"c....9.............#oo
oo#LLLL%#....{.{{.{{.{#oo
oo#######....{.c{.c{.c"oo
oo#.D...r....{DD{DD{DD#oo
oo"cD...s....{{{{{{{{{#oo
oo#.D...u....{DD{DD{DD#oo
oo#######....{.c{.c{.c"oo
oo#..........{.{{.{{.{#oo
oo#...................#oo
endmap
done

name: n11_electrical_factory_whales
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: " = w:3 window / w:1 stone wall
tile_group: XYZ = w:8 bulletproof glass / w:2 stone wall
tile: { = machinery
tile: $ = server rack
tile: + = w:8 locked door / w:1 closed door / w:1 open door

subst: 12 = w:1 + / w:5 Y
subst: 34 = w:1 + / w:3 Z
subst: 56 = w:1 + / w:2 X

shuffle: abc
shuffle: def
tile: ad = w:6 closed door / w:1 open door
tile: bcef = stone wall

tile: CD = floor
furniture: C = wood chair
furniture: D = desk
item_group: 70 D = items_office

tile: E = shelves
item_group: 78 E = items_computer_room

map:
oo#...................#oo
oo#..,,,......,,,.....#oo
oo#YYY1YYYYYYYY2YYY#.."oo
oo#................Z.."oo
oo#...$..$..$..$...Z..#oo
oo#...$..$..$..$...Z,.#oo
oo#{..$..$..$..$...3,.#oo
oo#{..$..$..$..$...Z,."oo
oo#{..$..$..$..$...Z.."oo
oo#{..$..$..$..$...Z,.#oo
oo#{..$..$..$..$...4,.#oo
oo#...$..$..$..$...Z,."oo
oo#...$..$..$..$...Z,."oo
oo#................Z,."oo
oo#XXX6XXXX+XXX5XXX#..#oo
oo#..,,,......,,,..#..#oo
oo#................#.."oo
oo##a#b#c####a#b#c##.."oo
oo#.......E#.......#..#oo
oo"..DDD..E#.EEEEE.#..#oo
oo"...C...E#.......#..#oo
oo#.......E#EEEEEEE#.."oo
oo##################.."oo
oo#...................#oo
oo#...................#oo
endmap
done

name: n11_cafeteria_factory_whales
subname: factory_11
type: cafeteria
neighbors: 1

tile: o = grass / dirt
tile: * = w:20 grass / w:5 dirt / w:2 small tree
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: ! = w:3 tree / w:2 small tree / w:1 grass
tile: S = stove
tile: % = counter
tile: + = w:6 closed door / w:1 open door
tile: " = w:8 window / w:1 stone wall
tile: & = affixed table
tile: ~ = affixed bench
tile: t = toilet
tile: k = sink

tile: F = fridge
item_group: 80 F = items_fast_food

tile: $ = shelves
item_group: 80 $ = items_food_shelves

tile: ^ = counter
item_group: 70 ^ = items_kitchen_counter

shuffle: abc
tile: a = w:3 closed door / w:1 open door
tile: bc = stone wall

map:
oo##a#b#c##############oo
oo#..........~&~~&~~&~"oo
oo#..........~&~~&~~&~"oo
oo#...................#oo
oo#########...........#oo
oo#^SS..#.%...........#oo
oo#$....#.%..~&~..~&~."oo
oo#$..^.#.%..~&~..~&~."oo
oo#$..^.#.%...........#oo
oo#F..^.#.%...........#oo
oo#F..^.#.%..~&~..~&~."oo
oo#^....#.%..~&~..~&~."oo
oo#^kk%%#.%...........#oo
oo#########...........#oo
oo#kkkk.#....~&~..~&~."oo
oo#.....+....~&~..~&~."oo
oo#tttt.#.............#oo
oo#######....~&~..~&~."oo
oo#tttt.#....~&~..~&~."oo
oo#.....+.............#oo
oo#kkkk.#.............#oo
oo#######....~&~..~&~."oo
oo#..........~&~..~&~."oo
oo#...................#oo
oo#...................#oo
endmap
done

name: n11_security_factory_whales
subname: factory_11
type: factory
neighbors: 1

tile: o = grass / dirt
tile: . = floor
tile: , = floor_lock
tile: * = pavement
tile_group: ^ = w:5 yellow pavement / w:1 pavement
tile: # = stone wall
tile: ! = w:4 chain-link fence / w:1 pavement
tile: ' = w:14 locked door / w:1 closed door
tile: + = w:14 closed door / w:1 open door
tile: " = w:9 window / w:1 stone wall
tile: % = counter
tile: < = w:3 stairs up / w:1 floor

tile: TDcC = floor
furniture: cC = wood chair
furniture: T = table
furniture: D = desk
item_group: 70 D = items_office

tile: WEL = shelves
item_group: 80 E = items_security_equipment
item_group: 72 W = items_security_weapons
item_group: 82 L = items_cleaning

map:
oo#########...#########oo
oo#%cC.#,.......,#.cC%#oo
oo#%...',.......,'...%#oo
oo#%...#,.......,#...%#oo
oo#.DD.#..%%%%%..#.DD.#oo
oo#.c..#..%C.C%..#..c.#oo
oo######,,,...,,,######oo
oo#<...##'#####'##EEEE#oo
oo#.......#EE#..,#....#oo
oo#########..#..,'....#oo
oo#..',......#,.,#....#oo
oo#..#,......',..#EEEE#oo
oo####,.######,..######oo
oo#..',.#.cC.#...#WWWW#oo
oo#..#,.#CTTc#..,#....#oo
oo####,.#cTTC#..,'....#oo
oo#..',.#.Cc.#..,#....#oo
oo#..#,.#....#...#WWWW#oo
oo############...######oo
oo#.....+,,,.+...#....#oo
oo".D...##'###...+..D."oo
oo"CD...#....#...#..DC"oo
oo#.D...#LLLL#...#..D.#oo
oo############...######oo
oo#...................#oo
endmap
done

name: n11_hallway_factory_whales
subname: hallway_factory_11
type: factory
neighbors: 11

tile: o = grass / dirt
tile: . = floor
tile: # = stone wall
tile: " = w:9 window / w:1 stone wall

tile: < = w:19 floor / w:1 metal ladder up

map:
oo#...................#oo
oo#...................#oo
oo##"##"###...###"##"##oo
oooooooooo#...#oooooooooo
oooooooooo#...#oooooooooo
oooooooooo"..."oooooooooo
oooooooooo"..."oooooooooo
oooooooooo#...#oooooooooo
oooooooooo#...#oooooooooo
oooooooooo"..."oooooooooo
oooooooooo"..."oooooooooo
oooooooooo#...#oooooooooo
oooooooooo#<.<#oooooooooo
oooooooooo#...#oooooooooo
oooooooooo"..."oooooooooo
oooooooooo"..."oooooooooo
oooooooooo#...#oooooooooo
oooooooooo#...#oooooooooo
oooooooooo"..."oooooooooo
oooooooooo"..."oooooooooo
oooooooooo#...#oooooooooo
oooooooooo#...#oooooooooo
oo##"##"###...###"##"##oo
oo#...................#oo
oo#...................#oo
endmap
done

name: n11_hallway_roof_factory_whales
subname: hallway_factory_11
type: factory
neighbors: 11
level: 1
flags: autostairs

tile: o = empty
tile: . = roof
tile: % = short stone wall

map:
oo%...................%oo
oo%...................%oo
oo%%%%%%%%%...%%%%%%%%%oo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oooooooooo%...%oooooooooo
oo%%%%%%%%%...%%%%%%%%%oo
oo%...................%oo
oo%...................%oo
endmap
done


name: n11_roof_factory_whales
subname: factory_11
type: factory
neighbors: 1
level: 1
flags: autostairs

tile: o = empty
tile: . = roof
tile: % = short stone wall

map:
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
oo%...................%oo
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
