### Whales Liquor Store
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

# Loosely based on the Rte 116 liquor store in South Hadley MA.
name: std_liquor_store_whales
subname: std_ls_whales
type: liquor store
tile: # = stone wall
tile: X = glass wall
tile: + = closed glass door / closed door
tile: o = grass / dirt
tile_group: ! = chain-link fence / pavement
tile_group: ? = w:1 chain-link fence / w:2 pavement
tile: * = pavement
tile: . = floor
tile: % = counter
tile: T = toilet
tile: K = sink
tile: @ = w:3 locked door / w:1 closed door

tile: LWs = display rack
item_group: 15 L = items_hard_liquor
item_group: 18 W = items_wine
item_group: 12 s = items_snacks

tile: fF = display fridge
item_group: 20 f = items_beer
item_group: 12 F = items_fridge_snacks

tile: b = floor
item_group: 40 b = items_beer

tile: D = dumpster
item_group: 50 D = items_trash

# The REAL one doesn't have tobacco etc., but let's give this one a 50% chance
subst: { = CL
tile: C = display rack
item_group: 40 C = items_behind_counter

map:
oooo!*******#+#XXXX####oo
oooo!*******#.s{{{...L#oo
oooo!*******#.s....%.L#oo
oooo!*******#.s%%%%%.L#oo
oooo!*******#........L#oo
oooo!*******#F.......L#oo
oooo!*******#f..W.W..L#oo
oooo!*******#f..W.W..L#oo
oooo!*******#...W.W..L#oo
oooo!*******#...W.W..L#oo
oooo!*******#.........#oo
oooo!*******#....fffff#oo
oooo!*******#....f..bb#oo
oooo!*******#....f..bb#oo
oooo!*******#....f..bb#oo
oooo!*******####+##+###oo
oooo!*******#T.#......#oo
oooo!*******#K.+......#oo
oooo!*******########@##oo
oooo!*********DDD*****?oo
oooo!*****************?oo
oooo!*****************?oo
oooo!*****************?oo
oooo!*****************?oo
oooo!??????????????????oo
endmap
done

name: std_liquor_store_whales_roof
subname: std_ls_whales
floor: 1
type: liquor store
tile: o = empty
tile: . = roof
map:
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
oooooooooooo...........oo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

# Loosely based on Liquor Town in S. Hadley, MA - The saddest liquor store ever
name: run_down_liquor_store_whales
subname: run_down_ls_whales
type: liquor store
tile: o = grass / dirt
tile: * = pavement
tile: ^ = white pavement
tile: # = stone wall
tile: + = closed glass door
tile: . = floor
tile: % = counter
tile: @ = locked door / closed door
# Seriously, this place just has broken shelving lying around in spots!
subst: } = w:7 { / w:4 . / w:4 L / w:3 W / w:1 X
tile: X = rubble

# The shelves are half-empty in Liquor Town BEFORE the apocalypse, so they're
# especially low on items compared to other liquor stores.
tile: {LW = display rack
# And yes, they have trash just lying on display, as it were.  So depressing.
item_group: 8 { = items_trash
item_group: 8 L = items_hard_liquor
item_group: 5 W = items_wine

tile: f = display fridge
item_group: 10 f = items_beer

shuffle: Dd
tile: d = pavement
tile: D = dumpster
item_group: 40 D = items_trash

tile: C = display rack
item_group: 35 C = items_behind_counter

map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
*************************
*************************
*************************
*****####+###########****
*****#C.%..}}}}}}}}}#****
*****#C.%..........}#****
*****#C.%..WWWWWWW.}#****
*****#C.%..........}#****
*****#C.%..LLLLLLL.}#D***
*****#.............}#D***
*****#fffffffffff..}#D***
*****#############@##****
*****^****^****^*********
*****^****^****^*********
*****^****^****^*********
*****^****^****^*********
*****^****^****^*********
*************************
*************************
*************************
*************************
*****************ddd*****
endmap
done

name: run_down_liquor_store_whales_roof
subname: run_down_ls_whales
floor: 1
type: liquor store
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooo................oooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
