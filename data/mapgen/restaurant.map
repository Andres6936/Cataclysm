### Restaurant
#
# The following tags are used: (# marks a line or part of a line as a comment)
#
# "name:" - Required.  A description of this spec.  It should appear first for
#           debugging reasons.
# "type:" - Required.  The World_terrain name this spec applies to.  See
#           world_terrain.dat for a list of World_terrains.
# "adjacent" - If this tag is present, then this map is an "adjacency" map.
#              This should appear before "base_terrain:" or "tile:" lines.
# "base_terrain:" - Recommended.  A terrain specification to be used for tiles
#                   which are not defined in the map section.
# "weight:" - A weight used when randomly choosing specs.  If omitted, the
#             weight defaults to 100.  A spec with weight 200 is twice as likely#             to be used as one with weight 100.
# "tile:" - Defines a terrain used in the map section.
# "items:" - Defines an item drop used in the map section.
# "map:" - Defines the start of the map section.
# "endmap" - Defines the end of the map section.
# "done" - Required.  Marks the end of this spec.
#
# See the bottom of this file for details on base_terrain and tile terrain
# specifications, item drop specifications, and adjacency maps.

name: std_restaurant_whales
subname: std_rest_whales
type: restaurant
tile: o = grass / dirt
tile: * = concrete floor
tile: . = floor
tile: p = pavement
tile: # = stone wall
tile: X = glass wall
tile: + = closed glass door
tile: ' = closed door
tile: @ = w:4 locked door / w:1 closed door
tile: & = counter
tile: T = toilet
tile: K = sink
tile: V = stove

tile: tcCd = floor
furniture: t  = table
furniture: cC = wood chair
furniture: d  = desk

tile: % = counter
item_group: 50 % = items_kitchen_counter

tile: $ = shelves
item_group: 40 $ = items_food_shelves

tile: LMN = shelves
item_group: 30 L = items_hard_liquor
item_group: 40 M = items_beer
item_group: 30 N = items_wine

shuffle: 123
tile: 1 = dumpster
item_group: 60 1 = items_trash
tile: 23 = pavement

map:
ooooooooooo***ooooooooooo
ooooooooooo***ooooooooooo
#XXXXXXXXX#+++#XXXXXXXXX#
#.cC...cC.......cC...cC.#
#Cttc.Cttc.....Cttc.Cttc#
#cttC.cttC.....cttC.cttC#
#.Cc...Cc..&&&..Cc...Cc.#
#..........&.&..........#
#c...cCc........cC.....c#
#t..ctttC......Cttc....t#
#c..Ctttc..cC..cttC....c#
#....cCc..Cttc.Cttc.....#
#c........cttC.cttC....c#
#t.........Cc...Cc.....t#
#c.....................c#
####''###################
#TK#..#%%%VVVV%%K%%#LMN$#
#..'..'............#...$#
#..#..'............'...$#
#..#..#%%KKK%%%%$$$#$$$$#
#####@###################
111pppp222pppppp333pppppp
ppppppppppppppppppppppppp
ppppppppppppppppppppppppp
ooooooooooooooooooooooooo
endmap
done

name: std_restaurant_whales_roof
subname: std_rest_whales
type: restaurant
floor: 1
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

name: fast_restaurant_whales_1
subname: fast_rest_whales
type: restaurant
weight: 20
tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: c = concrete floor
tile: # = stone wall
tile: X = glass wall
tile: + = closed glass door
tile: ' = closed door
tile: @ = w:4 locked door / w:1 closed door
tile: " = window
tile: C = affixed bench
tile: T = affixed table
tile: % = counter
tile: t = toilet
tile: K = sink
tile: V = stove
tile_group: ! = w:4 chain-link fence / w:1 pavement
tile: | = stockade fence

tile: $ = display rack
item_group: 35 $ = items_fast_food

tile: D = dumpster
item_group: 70 D = items_trash

map:
******ooooooooooooo******
******ooooooooooooo******
******ooooooccccccc******
******#XXXX#+#XXXX#******
******XCC.......CCX******
******XTT.......TTX******
******XCC.CC.CC.CCX******
******#XX.TT.TT..%#******
******+.X.CC.CC..%#******
******#.X.%%%%%..%#******
******#+X........%#******
******#...........+******
******#.#%%%%%%%%%#******
******#.#........%#******
******#.#%%%......"******
******#.#######%.%#******
******#.#tK#$.'..K#******
******#.'..#$$#V.K#******
******#+########@##******
*************************
*************************
*************************
********************|**||
********************|DDD|
!!!!!!!!!!!!!!!!!!!!|||||
endmap
done

name: fast_restaurant_whales_2
subname: fast_rest_whales
type: restaurant
weight: 20
tile: o = grass / dirt
tile: * = pavement
tile: . = floor
tile: p = w:4 concrete floor / w:1 stone path
tile: # = stone wall
tile: X = glass wall
tile: + = closed glass door
tile: ' = closed door
tile: @ = w:4 locked door / w:1 closed door
tile: " = window
tile: C = affixed bench
tile: T = affixed table
tile: % = counter
tile: t = toilet
tile: K = sink
tile: V = stove
tile_group: ! = w:4 chain-link fence / w:1 pavement
tile: | = stockade fence

tile: c = floor
furniture: c = plastic chair

tile: $ = display rack
item_group: 35 $ = items_fast_food

tile: D = dumpster
item_group: 70 D = items_trash

map:
!*****ooooooooooooo*****!
!*****ooooooooooooo*****!
!*****ooooooooppppp*****!
!*****#XXXXXXX+XXX#*****!
!*****XCC..c....CCX*****!
!*****XTT.cTc...TTX*****!
!*****XCC..c....CCX*****!
!*****XCC....c..CCX*****!
!*****XTT...cTc.TTX*****!
!*****XCC....c..CCX*****!
!*****+...........+*****!
!*****#.%%%%%%%%###*****!
!*****#..........."*****!
!*****#.######.%#.#*****!
!*****+.#$..'..%#.#*****!
!*****#'##$.#%.V#.#*****!
!*****#.t#$.#%.##.#*****!
!*****#.K#$$#K.#%."*****!
!*****########@####*****!
!***********************!
!***********************!
!***********************!
!*******************|**|!
!*******************|DDD!
!*!!!!!!!!!!!!!!!!!!||||!
endmap
done

name: fast_restaurant_whales_roof
subname: fast_rest_whales
type: restaurant
level: 1
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
oooooo.............oooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
endmap
done

name: diner_restaurant_whales
subname: diner_rest_whales
type: restaurant
weight: 35
tile: * = pavement
tile: ^ = white pavement
tile: . = floor
tile: , = floor_lock
tile: # = stone wall
tile: X = glass wall
tile_group: Y = glass wall / stone wall
tile: + = closed glass door
tile: & = locked door
tile: ' = w:3 closed door / w:1 open door
tile: L = toilet
tile: K = sink
tile: V = stove
tile: B = affixed bench
tile: T = affixed table

tile: ctsS = floor
furniture: c = plastic chair
furniture: t = table
furniture: sS = stool

tile: % = counter
item_group: 35 % = items_kitchen_counter

tile: 1$ = display rack
item_group: 35 1 = items_magazines
item_group: 30 $ = items_diner_food

map:
^^^^^***************^^^^^
*************************
*************************
*************************
^^^^^***************^^^^^
*************************
*************************
*************************
^^^^^***************^^^^^
*************************
*************************
*************************
^^^^^***************^^^^^
*************************
*********#YYYYYY*********
*********#1....+*********
###XXXXXX#X+X###XXXX#####
#%..%s.BTB...BTBBT..'..L#
#%..%S.BTB...BTBBT..#..K#
#V..%s..............#####
#V..%S..............#$$$#
#%..%s..............#$.$#
#K..%S..TBBTBBTBBT.,#$.$#
#K......TBBTBBTBBT.,&..$#
#########################
endmap
done

name: diner_restaurant_whales_roof
subname: diner_rest_whales
type: restaurant
level: 1
tile: * = empty
tile: . = roof
map:
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*************************
*********.......*********
*********.......*********
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
endmap
done

# Roughly based off Joe's Pizza in Northampton, MA
name: joes_restaurant_whales
subname: joes_rest_whales
type: restaurant
tile: o = concrete floor
tile: * = pavement
tile: . = floor
tile: " = window
tile_group: ' = w:3 wood wall / w:1 window
tile: # = wood wall
tile: + = closed door
tile: @ = w:40 locked door / w:10 closed door / w:1 wood wall
tile: B = affixed bench
tile: T = affixed table
tile: % = counter
tile: V = stove
tile: O = toilet
tile: K = sink

tile: sSct = floor
furniture: sS = stool
furniture: c  = wood chair
furniture: t  = table

tile: $ = counter
item_group: 50 $ = items_kitchen_counter

tile: 123 = display rack
item_group: 40 1 = items_hard_liquor
item_group: 45 2 = items_wine
item_group: 35 3 = items_food_shelves

tile: f = display fridge
item_group: 35 f = items_beer

tile: D = dumpster
item_group: 55 D = items_trash

map:
*******oooooooooooooooooo
*******oooooooooooooooooo
*******##"#+#"###"##+#"##
*******#BB...BB#f.%s..BB#
*******"TT...TT#f.%S..TT#
*******#BB...BB#f.%s..BB#
*******#BB...BB#1.%S..BB#
*******"TT...TT#1.%s..TT#
*******#BB...BB#1.%S..BB#
*******#BB.....%..%s..TT#
*******"TT.....#..%S..BB#
*******#BB...........####
*******#.......#.....+.O#
*******######..#..####.K#
*******#ctc.........c####
*******'............t#.3#
*******"BTT.TTB#BB..c#.3#
*******'BTT.TTB#TT...#.3#
*******#BBBBBBB#BB...#.3#
*******############++#+##
**********#2222#%%%....K#
**********@....+.......K#
*********D#2..2#$......$#
*********D#2222#$$VVV$$$#
*********D###############
endmap
done

name: joes_restaurant_whales_roof
subname: joes_rest_whales
type: restaurant
floor: 1
tile: o = empty
tile: . = roof
map:
ooooooooooooooooooooooooo
ooooooooooooooooooooooooo
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
ooooooo..................
oooooooooo...............
oooooooooo...............
oooooooooo...............
oooooooooo...............
oooooooooo...............
endmap
done

name: adj_restaurant_whales
type: restaurant
adjacent
adj_on: road
tile: a = pavement
map:
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
endmap
done

# A recommended format for spec names is <DESC>_<TYPE>_<NAME>
#  <DESC> is a short description of the unusual feature of this spec.  If it is
#         not unusual, use "std".
#  <TYPE> is the World_terrain used here.
#  <NAME> is your name, initials, or handle.
# This format makes it easy to identify the spec when debugging.
#
# The "tile:" line uses the following format:
#       tile: abc = w:20 dirt / w:15 grass / tree
# "abc" is a list of characters which, when found in the map section, will use
# this terrain.  You can include spaces and they will be ignored.
# " = " delineates between the list of characters and the terrain spec.  It must
# be surrounded by spaces.
# The rest of the line is a list of terrain names (from terrain.dat).  A terrain
# is randomly picked from this list.  You must place " / " between terrain
# names.  You can also include "w:20" with the terrain name to define its
# weight for random selection.  If omitted, the weight defaults to 10.  A
# terrain with weight 20 is twice as likely to be chosen as a terrain with
# weight 10.
#
# The "base_terrain:" line uses the same terrain spec format, but of course the
# list of characters and the " = " are not used.
#
# The "items:" line uses the following format:
#       50 abc = rock / w:20 stick
# The number at the front MUST be present.  It's the percentage chance of
# placing a single item.  If one item is used, the same chance is used to decide
# whether to place a second item, and so on until the chance fails.  It must be
# between 1 and 99.  If it's not, you will be warned and the chance will be
# corrected.
# The rest of the line is very similar to the terrain specifications, but with
# item names (from items.dat) instead of terrain names.
#
# The "map:" tag should appear on its own line.  It is followed by 25 lines of
# 25 characters each - you will be warned if there are missing characters or
# extra characters.  It is a list of characters which refer back to the "tile:"
# or "items:" lines.  If no matching "tile:" is found, the base_terrain is used;
# if the base_terrain is not present, the first terrain in terrain.dat is used.
#
# "Adjacency" specs are identified by placing the "adjacent" tag in the spec.
# These specs are used when generating a map ADJACENT to the specified type.
# Adjacency specs should be designed as if the adjacent terrain were to the
# north; the spec will be rotated as needed.
# The base terrain is generated, and then the adjacency map is generated on top.
# Adjacency specs are the same as normal maps, but with the difference that
# it is allowed to use "nothing" as a terrain name.  If "nothing" is selected,
# then the terrain in the map will be unchanged.  Also, ONLY floor terrain will
# be changed; non-floor terrain will be unchanged.
