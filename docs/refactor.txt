Items to refactor:

Keypress & action handling:
  IACTION_APPLY and IACTION_INVENTORY both have a chance to handle Item_action.
  They both do it the same way, just about, but have their own code to handle
  it!  Unify this code.

Attacks / damage:
  Lots of classes hold "int damage[DAMAGE_MAX]" or "int armor[DAMAGE_MAX]"
  We have a class called "Damage_set," this should replace all of those arrays.
  Might want to program some artihmetic for Damage_set.

Map drawing:
  FoV code could probably be better.
  Tell Map to handle drawing of the PC's glyph.
  Add sight distance limit.

Mapgen / Mapgen specs (layouts):
  We repeat the code for loading symbols (which are then bound to a terrain,
  item group, etc) many times (once for each thing it could be bound to!).  We
  should write a "std::string load_symbols(std::istream& data)" function, which
  just loads a list of symbols until we reach =.  There are some special cases
  which don't work (I think?) but those can just be exceptions.

Worldmap generation:
  It's a big, messy function.  Would be nice to clean it up a bunch.

Damage loading
  Fields and melee attacks have a sloppy bit at the end of load_data() where we
  check if the ident is also the name of a damage type.  Clean this up and make
  a Damage_set::load_data() function!
